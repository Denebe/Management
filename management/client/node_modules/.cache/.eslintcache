[{"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\index.js":"1","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\App.js":"2","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\Customer.js":"3","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerAdd.js":"4","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerDelete.js":"5","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerUpdate.js":"6","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\api\\api.js":"7","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\api\\Api.js":"8"},{"size":410,"mtime":1623833235005,"results":"9","hashOfConfig":"10"},{"size":6794,"mtime":1623916788241,"results":"11","hashOfConfig":"10"},{"size":1178,"mtime":1623833004800,"results":"12","hashOfConfig":"10"},{"size":3438,"mtime":1623834614724,"results":"13","hashOfConfig":"10"},{"size":1954,"mtime":1623834615345,"results":"14","hashOfConfig":"10"},{"size":3140,"mtime":1623834614189,"results":"15","hashOfConfig":"10"},{"size":1197,"mtime":1623839670927,"results":"16","hashOfConfig":"10"},{"size":1104,"mtime":1623898143454,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3tehss",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\index.js",[],["38","39"],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\App.js",["40"],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\Customer.js",["41"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CustomerDelete from './CustomerDelete';\r\nimport CustomerUpdate from './CustomerUpdate';\r\n\r\nconst Tr = styled.tr`\r\n\r\n    border-bottom: 1px solid #dddddd;\r\n    &:hover {\r\n        background-color: #f3f3f3;\r\n    }\r\n`;\r\n\r\nconst Td = styled.td`\r\n    padding: 12px 15px;\r\n`;\r\n\r\n\r\nfunction Customer(props) {\r\n\r\n    return (\r\n\r\n        <Tr>\r\n            <Td>\r\n                {props.id}\r\n            </Td>\r\n            <Td>\r\n                {props.name}\r\n            </Td>\r\n            <Td>\r\n                {props.birthday}\r\n            </Td>\r\n            <Td>\r\n                {props.gender}\r\n            </Td>\r\n            <Td>\r\n                {props.job}\r\n            </Td>\r\n            <Td>\r\n                <CustomerDelete stateRefresh={props.stateRefresh} id={props.id} />\r\n            </Td>\r\n            \r\n            <Td>\r\n                <CustomerUpdate stateRefresh={props.stateRefresh} id={props.id} name={props.name} birthday={props.birthday} gender={props.gender} name={props.name} job={props.job} />\r\n            </Td>\r\n            \r\n        </Tr>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Customer;","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerAdd.js",["42"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { addApi } from '../api/Api';\r\n\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction CustomerAdd(props) {\r\n\r\n        const [info, setInfo] = useState({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: ''\r\n        });\r\n\r\n        const [open, setOpen] = useState(false);\r\n\r\n    //\r\n    const handleFormSubmit = (e) => {\r\n        //event를 인자로 받고 이벤트의 기본동작은 하지않고, this.addcustomer()이 수행된다.\r\n        e.preventDefault()\r\n\r\n        //addCustomer함수호출\r\n        addApi(info.userName, info.birthday, info.gender, info.job)\r\n\r\n        setInfo({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: ''\r\n        })\r\n\r\n        setOpen(false);\r\n        //새로고침\r\n        props.stateRefresh();\r\n        //window.location.reload();\r\n    }\r\n\r\n    //\r\n    const handleValueChange = e => {\r\n\r\n        //state with multiple keys https://medium.com/@shlee1353/%EB%A6%AC%EC%95%A1%ED%8A%B8-hooks-usestate-4%EA%B0%80%EC%A7%80-%EC%83%81%EC%9A%A9%EB%B0%A9%EB%B2%95-dfe8b2096750\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name] : e.target.value\r\n        });\r\n           \r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setInfo({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: ''\r\n        })\r\n        setOpen(false);\r\n    }\r\n\r\n    //클래스 컴포넌트에서 반드시 구현돼야하는 메서드\r\n    \r\n        return (\r\n\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                    고객 추가하기\r\n                </Button>\r\n\r\n                <Dialog open={open} onClose={handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={info.userName} onChange={handleValueChange} /><br />\r\n                        <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={info.birthday} onChange={handleValueChange} /><br />\r\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={info.gender} onChange={handleValueChange} /><br />\r\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={info.job} onChange={handleValueChange} /><br />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerDelete.js",[],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerUpdate.js",["43"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { upApi } from '../api/Api';\r\n\r\nfunction CustomerUpdate(props) {\r\n\r\n    const [info, setInfo] = useState({\r\n        userName: '',\r\n        birthday: '',\r\n        gender: '',\r\n        job: ''\r\n    });\r\n\r\n    const [open, setOpen] = useState(false);\r\n    //\r\n\r\n    const handleFormSubmit = (e) => {\r\n        //event를 인자로 받고 이벤트의 기본동작은 하지않고, this.addcustomer()이 수행된다.\r\n        e.preventDefault()\r\n\r\n        //config.js에서 upapi 호출\r\n        upApi(props, info.userName, info.birthday, info.gender, info.job);\r\n\r\n        setOpen(false);\r\n        //새로고침\r\n        props.stateRefresh();\r\n        //window.location.reload();\r\n    }\r\n\r\n\r\n    const handleValueChange = (e) => {\r\n\r\n        //state with multiple keys https://medium.com/@shlee1353/%EB%A6%AC%EC%95%A1%ED%8A%B8-hooks-usestate-4%EA%B0%80%EC%A7%80-%EC%83%81%EC%9A%A9%EB%B0%A9%EB%B2%95-dfe8b2096750\r\n        setInfo({\r\n            ...info,\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n\r\n        console.log(props.id);\r\n\r\n        setInfo({\r\n            userName: props.name,\r\n            birthday: props.birthday,\r\n            gender: props.gender,\r\n            job: props.job\r\n        })\r\n\r\n\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setInfo({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: ''\r\n        })\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n                고객 수정하기\r\n            </Button>\r\n\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>고객 수정</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField label=\"이름\" type=\"text\" name=\"userName\" value={info.userName} onChange={handleValueChange} /><br />\r\n                    <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={info.birthday} onChange={handleValueChange} /><br />\r\n                    <TextField label=\"성별\" type=\"text\" name=\"gender\" value={info.gender} onChange={handleValueChange} /><br />\r\n                    <TextField label=\"직업\" type=\"text\" name=\"job\" value={info.job} onChange={handleValueChange} /><br />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleFormSubmit}>수정</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>닫기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CustomerUpdate;","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\api\\api.js",[],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\api\\Api.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":142,"column":32,"nodeType":"50","messageId":"51","endLine":142,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":44,"column":147,"nodeType":"54","messageId":"55","endLine":44,"endColumn":164},{"ruleId":"56","severity":1,"message":"57","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":13},{"ruleId":"56","severity":1,"message":"60","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]