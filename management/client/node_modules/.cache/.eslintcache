[{"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\index.js":"1","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\App.js":"2","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\Customer.js":"3","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerAdd.js":"4","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerDelete.js":"5","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerAddF.js":"6","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\Wow.js":"7","C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerUpdate.js":"8"},{"size":435,"mtime":1623806857804,"results":"9","hashOfConfig":"10"},{"size":6401,"mtime":1623807044963,"results":"11","hashOfConfig":"10"},{"size":1078,"mtime":1623811790059,"results":"12","hashOfConfig":"10"},{"size":4629,"mtime":1623641905104,"results":"13","hashOfConfig":"10"},{"size":1779,"mtime":1623811253207,"results":"14","hashOfConfig":"10"},{"size":3938,"mtime":1623664335762,"results":"15","hashOfConfig":"10"},{"size":5440,"mtime":1623816841749,"results":"16","hashOfConfig":"10"},{"size":4135,"mtime":1623820425514,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3tehss",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\index.js",["36"],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\App.js",[],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\Customer.js",[],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerAdd.js",["37"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n\r\n\r\nclass CustomerAdd extends React.Component {\r\n\r\n    //state값을 초기화하거나 메서드를 바인딩할때 사용한다.\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //state 초기값 설정\r\n        this.state = {\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            open: false\r\n        }\r\n\r\n        //콜백에서 this가 작동하려면 아래와 같이 바인딩(this를 고정시킬때 사용하는 방법)을 해줘야한다.\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n\r\n        this.handleValueChange = this.handleValueChange.bind(this)\r\n\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n\r\n        this.handleClickOpen = this.handleClickOpen.bind(this)\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    //\r\n    handleFormSubmit(e) {\r\n        //event를 인자로 받고 이벤트의 기본동작은 하지않고, this.addcustomer()이 수행된다.\r\n        e.preventDefault()\r\n\r\n        //addCustomer함수호출\r\n        this.addCustomer()\r\n            //then함수에 전달된 response\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.props.stateRefresh();\r\n            })\r\n        //state값 초기화\r\n        this.setState({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            open: false\r\n        })\r\n        //새로고침\r\n        this.props.stateRefresh();\r\n        //window.location.reload();\r\n    }\r\n\r\n    //\r\n    handleValueChange(e) {\r\n        const nextState = {};\r\n\r\n        //e.target.name은 해당 input의 name을 가리킨다.\r\n        nextState[e.target.name] = e.target.value;\r\n\r\n        //state값 지정\r\n        this.setState(nextState);\r\n    }\r\n\r\n\r\n    addCustomer() {\r\n        console.log(this.state.userName);\r\n\r\n        //axios.post 구성 url, data\r\n        const url = '/api/customers';\r\n\r\n        const data = {\r\n            NAME: this.state.userName,\r\n            birthday: this.state.birthday,\r\n            gender: this.state.gender,\r\n            job: this.state.job\r\n        }\r\n\r\n        return axios.post(url, data)\r\n    }\r\n\r\n    handleClickOpen() {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    //클래스 컴포넌트에서 반드시 구현돼야하는 메서드\r\n    render() {\r\n        const { classes } = this.props;\r\n        \r\n        return (\r\n\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    고객 추가하기\r\n                </Button>\r\n\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br />\r\n                        <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br />\r\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br />\r\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);",["38","39"],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerDelete.js",[],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerAddF.js",[],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\Wow.js",["40","41","42"],"C:\\Users\\VENDIT\\Desktop\\Week\\week2\\management\\management\\client\\src\\components\\CustomerUpdate.js",["43"],{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":11},{"ruleId":"44","severity":1,"message":"48","line":119,"column":17,"nodeType":"46","messageId":"47","endLine":119,"endColumn":24},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"44","severity":1,"message":"53","line":9,"column":8,"nodeType":"46","messageId":"47","endLine":9,"endColumn":24},{"ruleId":"44","severity":1,"message":"54","line":12,"column":8,"nodeType":"46","messageId":"47","endLine":12,"endColumn":18},{"ruleId":"44","severity":1,"message":"55","line":13,"column":8,"nodeType":"46","messageId":"47","endLine":13,"endColumn":17},{"ruleId":"44","severity":1,"message":"56","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"'CircularProgress' is defined but never used.","'SearchIcon' is defined but never used.","'InputBase' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]