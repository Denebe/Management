{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VENDIT\\\\Desktop\\\\Week\\\\week2\\\\management\\\\management\\\\client\\\\src\\\\components\\\\CustomerAdd.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  hidden: {\n    display: 'none'\n  }\n});\n\nclass CustomerAdd extends React.Component {\n  //state값을 초기화하거나 메서드를 바인딩할때 사용한다.\n  constructor(props) {\n    super(props); //state 초기값 설정\n\n    this.state = {\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: ''\n    }; //콜백에서 this가 작동하려면 아래와 같이 바인딩(this를 고정시킬때 사용하는 방법)을 해줘야한다.\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.addCustomer = this.addCustomer.bind(this);\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  } //\n\n\n  handleFormSubmit(e) {\n    //event를 인자로 받고 이벤트의 기본동작은 하지않고, this.addcustomer()이 수행된다.\n    e.preventDefault(); //addCustomer함수호출\n\n    this.addCustomer() //then함수에 전달된 response\n    .then(response => {\n      console.log(response.data);\n      this.props.stateRefresh();\n    }); //state값 초기화\n\n    this.setState({\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      open: false\n    }); //새로고침\n\n    this.props.stateRefresh(); //window.location.reload();\n  } //\n\n\n  handleValueChange(e) {\n    const nextState = {}; //e.target.name은 해당 input의 name을 가리킨다.\n\n    nextState[e.target.name] = e.target.value; //state값 지정\n\n    this.setState(nextState);\n  }\n\n  addCustomer() {\n    console.log(this.state.userName); //axios.post 구성 url, data\n\n    const url = '/api/customers';\n    const data = {\n      NAME: this.state.userName,\n      birthday: this.state.birthday,\n      gender: this.state.gender,\n      job: this.state.job\n    };\n    return axios.post(url, data);\n  }\n\n  handleClickOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      open: false\n    });\n  } //클래스 컴포넌트에서 반드시 구현돼야하는 메서드\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClickOpen,\n        children: \"\\uACE0\\uAC1D \\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"\\uACE0\\uAC1D \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\uC774\\uB984\",\n            type: \"text\",\n            name: \"userName\",\n            value: this.state.userName,\n            onChange: this.handleValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 139\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n            type: \"text\",\n            name: \"birthday\",\n            value: this.state.userName,\n            onChange: this.handleValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 141\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\uC131\\uBCC4\",\n            type: \"text\",\n            name: \"gender\",\n            value: this.state.userName,\n            onChange: this.handleValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 137\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\uC9C1\\uC5C5\",\n            type: \"text\",\n            name: \"job\",\n            value: this.state.userName,\n            onChange: this.handleValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 134\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.handleFormSubmit,\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.handleClose,\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomerAdd;","map":{"version":3,"sources":["C:/Users/VENDIT/Desktop/Week/week2/management/management/client/src/components/CustomerAdd.js"],"names":["React","axios","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Button","withStyles","styles","theme","hidden","display","CustomerAdd","Component","constructor","props","state","userName","birthday","gender","job","handleFormSubmit","bind","handleValueChange","addCustomer","handleClickOpen","handleClose","e","preventDefault","then","response","console","log","data","stateRefresh","setState","open","nextState","target","name","value","url","NAME","post","render","classes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\n\r\n\r\nclass CustomerAdd extends React.Component {\r\n\r\n    //state값을 초기화하거나 메서드를 바인딩할때 사용한다.\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //state 초기값 설정\r\n        this.state = {\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: ''\r\n        }\r\n\r\n        //콜백에서 this가 작동하려면 아래와 같이 바인딩(this를 고정시킬때 사용하는 방법)을 해줘야한다.\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n\r\n        this.handleValueChange = this.handleValueChange.bind(this)\r\n\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n\r\n        this.handleClickOpen = this.handleClickOpen.bind(this)\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    //\r\n    handleFormSubmit(e) {\r\n        //event를 인자로 받고 이벤트의 기본동작은 하지않고, this.addcustomer()이 수행된다.\r\n        e.preventDefault()\r\n\r\n        //addCustomer함수호출\r\n        this.addCustomer()\r\n            //then함수에 전달된 response\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.props.stateRefresh();\r\n            })\r\n        //state값 초기화\r\n        this.setState({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            open: false\r\n        })\r\n        //새로고침\r\n        this.props.stateRefresh();\r\n        //window.location.reload();\r\n    }\r\n\r\n    //\r\n    handleValueChange(e) {\r\n        const nextState = {};\r\n\r\n        //e.target.name은 해당 input의 name을 가리킨다.\r\n        nextState[e.target.name] = e.target.value;\r\n\r\n        //state값 지정\r\n        this.setState(nextState);\r\n    }\r\n\r\n\r\n    addCustomer() {\r\n        console.log(this.state.userName);\r\n\r\n        //axios.post 구성 url, data\r\n        const url = '/api/customers';\r\n\r\n        const data = {\r\n            NAME: this.state.userName,\r\n            birthday: this.state.birthday,\r\n            gender: this.state.gender,\r\n            job: this.state.job\r\n        }\r\n\r\n        return axios.post(url, data)\r\n    }\r\n\r\n    handleClickOpen() {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    //클래스 컴포넌트에서 반드시 구현돼야하는 메서드\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    고객 추가하기\r\n                </Button>\r\n\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br />\r\n                        <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.userName} onChange={this.handleValueChange} /><br />\r\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.userName} onChange={this.handleValueChange} /><br />\r\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.userName} onChange={this.handleValueChange} /><br />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CustomerAdd;"]},"metadata":{},"sourceType":"module"}