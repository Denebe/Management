{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VENDIT\\\\Desktop\\\\Week\\\\week2\\\\management\\\\management\\\\client\\\\src\\\\components\\\\CustomerAdd.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomerAdd extends React.Component {\n  //state값을 초기화하거나 메서드를 바인딩할때 사용한다.\n  constructor(props) {\n    super(props); //state 초기값 설정\n\n    this.state = {\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: ''\n    }; //콜백에서 this가 작동하려면 아래와 같이 바인딩(this를 고정시킬때 사용하는 방법)을 해줘야한다.\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.addCustomer = this.addCustomer.bind(this);\n  } //\n\n\n  handleFormSubmit(e) {\n    //event를 인자로 받고 이벤트의 기본동작은 하지않고, this.addcustomer()이 수행된다.\n    e.preventDefault(); //addCustomer함수호출\n\n    this.addCustomer() //then함수에 전달된 response\n    .then(response => {\n      console.log(response.data);\n    }); //state값 초기화\n\n    this.setState({\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: ''\n    });\n    window.location.reload();\n  }\n\n  handleValueChange(e) {\n    const nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  addCustomer() {\n    console.log(this.state.userName);\n    const url = '/api/customers';\n    const data = {\n      NAME: this.state.userName,\n      birthday: this.state.birthday,\n      gender: this.state.gender,\n      job: this.state.job\n    };\n    return axios.post(url, data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uACE0\\uAC1D \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \"\\uC774\\uB984: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userName\",\n        value: this.state.userName,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 124\n      }, this), \"\\uC0DD\\uB144\\uC6D4\\uC77C: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"birthday\",\n        value: this.state.birthday,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 126\n      }, this), \"\\uC131\\uBCC4: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"gender\",\n        value: this.state.gender,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 120\n      }, this), \"\\uC9C1\\uC5C5: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"job\",\n        value: this.state.job,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 114\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CustomerAdd;","map":{"version":3,"sources":["C:/Users/VENDIT/Desktop/Week/week2/management/management/client/src/components/CustomerAdd.js"],"names":["React","axios","CustomerAdd","Component","constructor","props","state","userName","birthday","gender","job","handleFormSubmit","bind","handleValueChange","addCustomer","e","preventDefault","then","response","console","log","data","setState","window","location","reload","nextState","target","name","value","url","NAME","post","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CustomerAdd extends React.Component {\r\n\r\n    //state값을 초기화하거나 메서드를 바인딩할때 사용한다.\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //state 초기값 설정\r\n        this.state = {\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: ''\r\n        }\r\n\r\n        //콜백에서 this가 작동하려면 아래와 같이 바인딩(this를 고정시킬때 사용하는 방법)을 해줘야한다.\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n\r\n        this.handleValueChange = this.handleValueChange.bind(this)\r\n\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n    }\r\n\r\n    //\r\n    handleFormSubmit(e) {\r\n        //event를 인자로 받고 이벤트의 기본동작은 하지않고, this.addcustomer()이 수행된다.\r\n        e.preventDefault()\r\n\r\n        //addCustomer함수호출\r\n        this.addCustomer()\r\n        //then함수에 전달된 response\r\n            .then((response) => {\r\n                console.log(response.data);\r\n            })\r\n        //state값 초기화\r\n        this.setState({\r\n            userName:'',\r\n            birthday:'',\r\n            gender:'',\r\n            job:''\r\n        })\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    handleValueChange(e) {\r\n        const nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n\r\n\r\n    addCustomer() {\r\n        console.log(this.state.userName);\r\n\r\n        const url = '/api/customers';\r\n        \r\n        const data = {\r\n            NAME: this.state.userName,\r\n            birthday: this.state.birthday,\r\n            gender: this.state.gender,\r\n            job: this.state.job\r\n        }\r\n\r\n        return axios.post(url, data)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form onSubmit={this.handleFormSubmit}>\r\n\r\n                <h1>고객 추가</h1>\r\n\r\n                    이름: <input type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br />\r\n\r\n                    생년월일: <input type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br />\r\n\r\n                    성별: <input type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br />\r\n\r\n                    직업: <input type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br />\r\n\r\n                <button type=\"submit\">추가하기</button>\r\n\r\n            </form>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CustomerAdd;"]},"metadata":{},"sourceType":"module"}